# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-08-23 16:17
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ixbr_api.core.validators
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ASN',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('number', models.BigIntegerField(primary_key=True, serialize=False, validators=[ixbr_api.core.validators.validate_as_number])),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ASN',
                'ordering': ('number',),
                'verbose_name_plural': 'ASNs',
            },
        ),
        migrations.CreateModel(
            name='Bilateral',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(blank=True, max_length=20)),
                ('bilateral_type', models.CharField(choices=[('L2', 'L2'), ('VPWS', 'VPWS'), ('VXLAN', 'VXLAN')], default='L2', max_length=5)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bilateral',
                'ordering': ('label',),
                'verbose_name_plural': 'Bilaterals',
            },
        ),
        migrations.CreateModel(
            name='BilateralPeer',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ASN')),
            ],
            options={
                'verbose_name': 'BilateralPeer',
                'ordering': ('asn', 'tag', 'inner'),
                'verbose_name_plural': 'BilateralPeers',
            },
        ),
        migrations.CreateModel(
            name='ChannelPort',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tags_type', models.CharField(choices=[('Direct-Bundle-Ether', 'Direct-Bundle-Ether'), ('Indirect-Bundle-Ether', 'Indirect-Bundle-Ether'), ('Port-Specific', 'Port-Specific'), ('Core', 'Core')], default='Direct-Bundle-Ether', max_length=32)),
                ('create_tags', models.BooleanField(default=True)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ChannelPort',
                'verbose_name_plural': 'ChannelPorts',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('name', models.CharField(blank=True, max_length=255)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact',
                'ordering': ('email',),
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='ContactsMap',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('peering_url', models.CharField(max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('peering_policy', models.CharField(choices=[('OPEN', 'All peering accepted'), ('CASE-BY-CASE', 'Peer decide case by case'), ('SELECTIVE', 'Peer in ATM but in selective perspective'), ('CLOSED', 'Only Bilateral'), ('CUSTOM', 'Peer in ATM but Bilateral selective'), ('ROUTE-SERVER-ONLY', 'Just receive routes')], default='OPEN', max_length=32)),
                ('adm_contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adm_related', to='core.Contact')),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ASN', verbose_name='ASN')),
                ('com_contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='com_related', to='core.Contact')),
            ],
            options={
                'verbose_name': 'ContactsMap',
                'ordering': ('asn', 'ix'),
                'verbose_name_plural': 'ContactsMaps',
            },
        ),
        migrations.CreateModel(
            name='CoreChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('channel_port', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.ChannelPort')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('other_core_channel', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.CoreChannel')),
            ],
            options={
                'verbose_name': 'CoreChannel',
                'ordering': ('name',),
                'verbose_name_plural': 'CoreChannels',
            },
        ),
        migrations.CreateModel(
            name='CustomerChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('cix_type', models.PositiveIntegerField(choices=[(0, 'individual port'), (1, 'CIX type 1'), (2, 'CIX type 2'), (3, 'CIX type 3')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ASN')),
                ('channel_port', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.ChannelPort')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CustomerChannel',
                'ordering': ('name',),
                'verbose_name_plural': 'CustomerChannels',
            },
        ),
        migrations.CreateModel(
            name='DIO',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(255)])),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DIO',
                'ordering': ('pix', 'name'),
                'verbose_name_plural': 'DIOs',
            },
        ),
        migrations.CreateModel(
            name='DIOPort',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ix_position', models.CharField(blank=True, max_length=255, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(255)])),
                ('datacenter_position', models.CharField(blank=True, max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255)])),
                ('dio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.DIO')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DIOPort',
                'ordering': ('dio',),
                'verbose_name_plural': 'DIOPorts',
            },
        ),
        migrations.CreateModel(
            name='DownlinkChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('channel_port', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.ChannelPort')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DownlinkChannel',
                'ordering': ('name',),
                'verbose_name_plural': 'DownlinkChannels',
            },
        ),
        migrations.CreateModel(
            name='HistoricalASN',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('number', models.BigIntegerField(db_index=True, validators=[ixbr_api.core.validators.validate_as_number])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ASN',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBilateral',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('label', models.CharField(blank=True, max_length=20)),
                ('bilateral_type', models.CharField(choices=[('L2', 'L2'), ('VPWS', 'VPWS'), ('VXLAN', 'VXLAN')], default='L2', max_length=5)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('peer_a', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.BilateralPeer')),
                ('peer_b', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.BilateralPeer')),
            ],
            options={
                'verbose_name': 'historical Bilateral',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBilateralPeer',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asn', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ASN')),
                ('customer_channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.CustomerChannel')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical BilateralPeer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalChannelPort',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('tags_type', models.CharField(choices=[('Direct-Bundle-Ether', 'Direct-Bundle-Ether'), ('Indirect-Bundle-Ether', 'Indirect-Bundle-Ether'), ('Port-Specific', 'Port-Specific'), ('Core', 'Core')], default='Direct-Bundle-Ether', max_length=32)),
                ('create_tags', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ChannelPort',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('name', models.CharField(blank=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalContactsMap',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('peering_url', models.CharField(max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('peering_policy', models.CharField(choices=[('OPEN', 'All peering accepted'), ('CASE-BY-CASE', 'Peer decide case by case'), ('SELECTIVE', 'Peer in ATM but in selective perspective'), ('CLOSED', 'Only Bilateral'), ('CUSTOM', 'Peer in ATM but Bilateral selective'), ('ROUTE-SERVER-ONLY', 'Just receive routes')], default='OPEN', max_length=32)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adm_contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact')),
                ('asn', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ASN')),
                ('com_contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ContactsMap',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCoreChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('channel_port', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ChannelPort')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('other_core_channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.CoreChannel')),
            ],
            options={
                'verbose_name': 'historical CoreChannel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCustomerChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('cix_type', models.PositiveIntegerField(choices=[(0, 'individual port'), (1, 'CIX type 1'), (2, 'CIX type 2'), (3, 'CIX type 3')], validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asn', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ASN')),
                ('channel_port', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ChannelPort')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical CustomerChannel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDIO',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(255)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical DIO',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDIOPort',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('ix_position', models.CharField(blank=True, max_length=255, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(255)])),
                ('datacenter_position', models.CharField(blank=True, max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('dio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.DIO')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical DIOPort',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDownlinkChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('channel_port', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ChannelPort')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical DownlinkChannel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalIPv4Address',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('reserved', models.BooleanField(default=False)),
                ('address', models.GenericIPAddressField(db_index=True, validators=[ixbr_api.core.validators.validate_ipv4_network], verbose_name='IPv4')),
                ('reverse_dns', models.CharField(blank=True, max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('in_lg', models.BooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical IPv4Address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalIPv6Address',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('reserved', models.BooleanField(default=False)),
                ('address', models.GenericIPAddressField(db_index=True, validators=[ixbr_api.core.validators.validate_ipv6_network], verbose_name='IPv6')),
                ('reverse_dns', models.CharField(blank=True, max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('in_lg', models.BooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical IPv6Address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalIX',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('code', models.CharField(db_index=True, max_length=4, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(4), ixbr_api.core.validators.validate_ix_code])),
                ('shortname', models.CharField(db_index=True, max_length=16, validators=[ixbr_api.core.validators.validate_ix_shortname])),
                ('fullname', models.CharField(max_length=48, validators=[ixbr_api.core.validators.validate_ix_fullname])),
                ('ipv4_prefix', models.CharField(db_index=True, max_length=18, validators=[ixbr_api.core.validators.validate_ipv4_network])),
                ('ipv6_prefix', models.CharField(db_index=True, max_length=43, validators=[ixbr_api.core.validators.validate_ipv6_network])),
                ('management_prefix', models.CharField(max_length=18, validators=[ixbr_api.core.validators.validate_ipv4_network])),
                ('create_ips', models.BooleanField(default=True)),
                ('create_tags', models.BooleanField(default=True)),
                ('tags_policy', models.CharField(choices=[('ix_managed', 'IX_managed'), ('distributed', 'Distributed')], default='Bundle-Ether', max_length=32)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical IX',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMACAddress',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('address', models.CharField(db_index=True, max_length=17, validators=[ixbr_api.core.validators.validate_mac_address])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical MACAddress',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMLPAv4',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('prefix_limit', models.PositiveIntegerField(default=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asn', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ASN')),
                ('customer_channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.CustomerChannel')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical MLPAv4',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMLPAv6',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('prefix_limit', models.PositiveIntegerField(default=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asn', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ASN')),
                ('customer_channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.CustomerChannel')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical MLPAv6',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMonitorv4',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asn', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ASN')),
                ('customer_channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.CustomerChannel')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Monitorv4',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOrganization',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('shortname', models.CharField(max_length=255)),
                ('cnpj', models.CharField(blank=True, editable=False, max_length=255, validators=[ixbr_api.core.validators.validate_cnpj])),
                ('url', models.CharField(max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('address', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Organization',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhone',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('number', models.CharField(max_length=20)),
                ('category', models.CharField(choices=[('Landline', 'Landline'), ('Mobile', 'Mobile'), ('Business', 'Business'), ('INOC-DBA', 'INOC-DBA')], default='Landline', max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Phone',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhysicalInterface',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('serial_number', models.CharField(blank=True, max_length=255)),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], default='SFP', max_length=8)),
                ('port_type', models.CharField(choices=[('SX', 'SX'), ('LX', 'LX'), ('ZX', 'ZX'), ('SR', 'SR'), ('LR', 'LR'), ('ER', 'ER'), ('ZR', 'ZR'), ('ER4', 'ER4'), ('LR4', 'LR4'), ('10LR', '10LR'), ('SR4', 'SR4'), ('ERlite', 'ERlite'), ('UTP', 'UTP'), ('BD', 'BD')], default='UTP', max_length=8)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical PhysicalInterface',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPIX',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('code', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(30), ixbr_api.core.validators.validate_pix_code])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical PIX',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPort',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('reserved', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('capacity', models.IntegerField(choices=[(1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')], default=1000)),
                ('configured_capacity', models.IntegerField(choices=[(100, '100M'), (1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')], default=1000)),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], default='SFP', max_length=8)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('RESERVED_CUSTOMER', 'Reserved for customer'), ('RESERVED_INFRA', 'Reserved for uplinks or dl'), ('CUSTOMER', 'Allocated for customer'), ('INFRASTRUCTURE', 'Uplink or downlink'), ('UNAVAILABLE', 'unavailable')], default='AVAILABLE', max_length=32)),
                ('description', models.CharField(blank=True, max_length=80)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('channel_port', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ChannelPort')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Port',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRoute',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Route',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSwitch',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('management_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Management IP')),
                ('translation', models.BooleanField(default=False)),
                ('is_pe', models.BooleanField(default=False)),
                ('create_ports', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Switch',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSwitchModel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('model', models.CharField(db_index=True, max_length=255)),
                ('vendor', models.CharField(choices=[('EXTREME', 'EXTREME'), ('BROCADE', 'BROCADE'), ('CISCO', 'CISCO'), ('JUNIPER', 'JUNIPER'), ('HUAWEI', 'HUAWEI')], max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical SwitchModel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSwitchModule',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('model', models.CharField(db_index=True, max_length=255)),
                ('vendor', models.CharField(choices=[('EXTREME', 'EXTREME'), ('BROCADE', 'BROCADE'), ('CISCO', 'CISCO'), ('JUNIPER', 'JUNIPER'), ('HUAWEI', 'HUAWEI')], max_length=255)),
                ('port_quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('capacity', models.IntegerField(choices=[(1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')], default=1000)),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], default='SFP', max_length=8)),
                ('name_format', models.CharField(default='{0}', max_length=255, validators=[ixbr_api.core.validators.validate_name_format])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical SwitchModule',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSwitchPortRange',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('capacity', models.IntegerField(choices=[(1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')])),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], max_length=8)),
                ('name_format', models.CharField(max_length=255, validators=[ixbr_api.core.validators.validate_name_format])),
                ('begin', models.PositiveIntegerField()),
                ('end', models.PositiveIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical SwitchPortRange',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('reserved', models.BooleanField(default=False)),
                ('tag', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('status', models.CharField(choices=[('AVAILABLE', 'available'), ('RESERVED', 'reserved'), ('PRODUCTION', 'production')], default='AVAILABLE', max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTranslationChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('channel_port', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ChannelPort')),
                ('customer_channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.CustomerChannel')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical TranslationChannel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUplinkChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('channel_port', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ChannelPort')),
                ('downlink_channel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.DownlinkChannel')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical UplinkChannel',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='IPv4Address',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('reserved', models.BooleanField(default=False)),
                ('address', models.GenericIPAddressField(primary_key=True, serialize=False, validators=[ixbr_api.core.validators.validate_ipv4_network], verbose_name='IPv4')),
                ('reverse_dns', models.CharField(blank=True, max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('in_lg', models.BooleanField()),
            ],
            options={
                'verbose_name': 'IPv4Address',
                'ordering': ('address',),
                'verbose_name_plural': 'IPv4Addresses',
            },
        ),
        migrations.CreateModel(
            name='IPv6Address',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('reserved', models.BooleanField(default=False)),
                ('address', models.GenericIPAddressField(primary_key=True, serialize=False, validators=[ixbr_api.core.validators.validate_ipv6_network], verbose_name='IPv6')),
                ('reverse_dns', models.CharField(blank=True, max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('in_lg', models.BooleanField()),
            ],
            options={
                'verbose_name': 'IPv6Address',
                'ordering': ('address',),
                'verbose_name_plural': 'IPv6Addresses',
            },
        ),
        migrations.CreateModel(
            name='IX',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('code', models.CharField(max_length=4, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(4), ixbr_api.core.validators.validate_ix_code])),
                ('shortname', models.CharField(max_length=16, unique=True, validators=[ixbr_api.core.validators.validate_ix_shortname])),
                ('fullname', models.CharField(max_length=48, validators=[ixbr_api.core.validators.validate_ix_fullname])),
                ('ipv4_prefix', models.CharField(max_length=18, unique=True, validators=[ixbr_api.core.validators.validate_ipv4_network])),
                ('ipv6_prefix', models.CharField(max_length=43, unique=True, validators=[ixbr_api.core.validators.validate_ipv6_network])),
                ('management_prefix', models.CharField(max_length=18, validators=[ixbr_api.core.validators.validate_ipv4_network])),
                ('create_ips', models.BooleanField(default=True)),
                ('create_tags', models.BooleanField(default=True)),
                ('tags_policy', models.CharField(choices=[('ix_managed', 'IX_managed'), ('distributed', 'Distributed')], default='Bundle-Ether', max_length=32)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IX',
                'ordering': ('code',),
                'verbose_name_plural': 'IXs',
            },
        ),
        migrations.CreateModel(
            name='MACAddress',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('address', models.CharField(max_length=17, primary_key=True, serialize=False, validators=[ixbr_api.core.validators.validate_mac_address])),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MACAddress',
                'ordering': ('address',),
                'verbose_name_plural': 'MACAddresses',
            },
        ),
        migrations.CreateModel(
            name='MLPAv4',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('prefix_limit', models.PositiveIntegerField(default=100)),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ASN')),
                ('customer_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.CustomerChannel')),
                ('mac_addresses', models.ManyToManyField(to='core.MACAddress')),
                ('mlpav4_address', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.IPv4Address')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MLPAv4',
                'ordering': ('asn', 'tag', 'inner'),
                'verbose_name_plural': 'MLPAsv4',
            },
        ),
        migrations.CreateModel(
            name='MLPAv6',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('prefix_limit', models.PositiveIntegerField(default=100)),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ASN')),
                ('customer_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.CustomerChannel')),
                ('mac_addresses', models.ManyToManyField(to='core.MACAddress')),
                ('mlpav6_address', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.IPv6Address')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MLPAv6',
                'ordering': ('asn', 'tag', 'inner'),
                'verbose_name_plural': 'MLPAsv6',
            },
        ),
        migrations.CreateModel(
            name='Monitorv4',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('inner', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('shortname', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('ALLOCATED', 'Allocated for customer but not in use'), ('INTERNAL', 'Internal servers in production'), ('PRODUCTION', 'Customer in production'), ('QUARANTINE', 'Customer in test/quarantine')], default='ALLOCATED', max_length=32)),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ASN')),
                ('customer_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.CustomerChannel')),
                ('mac_addresses', models.ManyToManyField(to='core.MACAddress')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('monitor_address', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.IPv4Address')),
            ],
            options={
                'verbose_name': 'Monitorv4',
                'ordering': ('asn', 'tag', 'inner'),
                'verbose_name_plural': 'Monitorsv4',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('shortname', models.CharField(max_length=255)),
                ('cnpj', models.CharField(blank=True, editable=False, max_length=255, validators=[ixbr_api.core.validators.validate_cnpj])),
                ('url', models.CharField(max_length=255, validators=[ixbr_api.core.validators.validate_url_format])),
                ('address', models.CharField(max_length=255)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization',
                'ordering': ('shortname',),
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=20)),
                ('category', models.CharField(choices=[('Landline', 'Landline'), ('Mobile', 'Mobile'), ('Business', 'Business'), ('INOC-DBA', 'INOC-DBA')], default='Landline', max_length=10)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Contact')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Phone',
                'ordering': ('contact', 'number'),
                'verbose_name_plural': 'Phones',
            },
        ),
        migrations.CreateModel(
            name='PhysicalInterface',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('serial_number', models.CharField(blank=True, max_length=255)),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], default='SFP', max_length=8)),
                ('port_type', models.CharField(choices=[('SX', 'SX'), ('LX', 'LX'), ('ZX', 'ZX'), ('SR', 'SR'), ('LR', 'LR'), ('ER', 'ER'), ('ZR', 'ZR'), ('ER4', 'ER4'), ('LR4', 'LR4'), ('10LR', '10LR'), ('SR4', 'SR4'), ('ERlite', 'ERlite'), ('UTP', 'UTP'), ('BD', 'BD')], default='UTP', max_length=8)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PhysicalInterface',
                'ordering': ('connector_type', 'port_type'),
                'verbose_name_plural': 'PhysicalInterfaces',
            },
        ),
        migrations.CreateModel(
            name='PIX',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(30), ixbr_api.core.validators.validate_pix_code])),
                ('ix', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.IX')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PIX',
                'ordering': ('ix', 'code'),
                'verbose_name_plural': 'PIXs',
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reserved', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('capacity', models.IntegerField(choices=[(1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')], default=1000)),
                ('configured_capacity', models.IntegerField(choices=[(100, '100M'), (1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')], default=1000)),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], default='SFP', max_length=8)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('RESERVED_CUSTOMER', 'Reserved for customer'), ('RESERVED_INFRA', 'Reserved for uplinks or dl'), ('CUSTOMER', 'Allocated for customer'), ('INFRASTRUCTURE', 'Uplink or downlink'), ('UNAVAILABLE', 'unavailable')], default='AVAILABLE', max_length=32)),
                ('description', models.CharField(blank=True, max_length=80)),
                ('channel_port', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ChannelPort')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('physical_interface', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='port_related', to='core.PhysicalInterface')),
            ],
            options={
                'verbose_name': 'Port',
                'ordering': ('switch', 'name'),
                'verbose_name_plural': 'Ports',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('management_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Management IP')),
                ('translation', models.BooleanField(default=False)),
                ('is_pe', models.BooleanField(default=False)),
                ('create_ports', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Switch',
                'ordering': ('pix', 'management_ip'),
                'verbose_name_plural': 'Switches',
            },
        ),
        migrations.CreateModel(
            name='SwitchModel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=255, unique=True)),
                ('vendor', models.CharField(choices=[('EXTREME', 'EXTREME'), ('BROCADE', 'BROCADE'), ('CISCO', 'CISCO'), ('JUNIPER', 'JUNIPER'), ('HUAWEI', 'HUAWEI')], max_length=255)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SwitchModel',
                'ordering': ('model',),
                'verbose_name_plural': 'SwitchModels',
            },
        ),
        migrations.CreateModel(
            name='SwitchModule',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=255, unique=True)),
                ('vendor', models.CharField(choices=[('EXTREME', 'EXTREME'), ('BROCADE', 'BROCADE'), ('CISCO', 'CISCO'), ('JUNIPER', 'JUNIPER'), ('HUAWEI', 'HUAWEI')], max_length=255)),
                ('port_quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('capacity', models.IntegerField(choices=[(1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')], default=1000)),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], default='SFP', max_length=8)),
                ('name_format', models.CharField(default='{0}', max_length=255, validators=[ixbr_api.core.validators.validate_name_format])),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'SwitchModule',
                'ordering': ('model',),
                'verbose_name_plural': 'SwitchModules',
            },
        ),
        migrations.CreateModel(
            name='SwitchPortRange',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('capacity', models.IntegerField(choices=[(1000, '1G'), (10000, '10G'), (40000, '40G'), (100000, '100G'), (400000, '400G')])),
                ('connector_type', models.CharField(choices=[('SFP', 'SFP'), ('SFP+', 'SFP+'), ('XFP', 'XFP'), ('CFP', 'CFP'), ('CPAK', 'CPAK'), ('QSFP28', 'QSFP28'), ('UTP', 'UTP')], max_length=8)),
                ('name_format', models.CharField(max_length=255, validators=[ixbr_api.core.validators.validate_name_format])),
                ('begin', models.PositiveIntegerField()),
                ('end', models.PositiveIntegerField()),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('switch_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.SwitchModel')),
            ],
            options={
                'verbose_name': 'SwitchPortRange',
                'ordering': ('switch_model',),
                'verbose_name_plural': 'SwitchPortRanges',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reserved', models.BooleanField(default=False)),
                ('tag', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4095)])),
                ('status', models.CharField(choices=[('AVAILABLE', 'available'), ('RESERVED', 'reserved'), ('PRODUCTION', 'production')], default='AVAILABLE', max_length=10)),
                ('ix', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.IX')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('tag_domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.ChannelPort')),
            ],
            options={
                'verbose_name': 'Tag',
                'ordering': ('ix', 'tag'),
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='TranslationChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('channel_port', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.ChannelPort')),
                ('customer_channel', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.CustomerChannel')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TranslationChannel',
                'ordering': ('name',),
                'verbose_name_plural': 'TranslationChannels',
            },
        ),
        migrations.CreateModel(
            name='UplinkChannel',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_ticket', models.PositiveIntegerField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('is_lag', models.BooleanField()),
                ('is_mclag', models.BooleanField()),
                ('channel_port', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.ChannelPort')),
                ('downlink_channel', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.DownlinkChannel')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UplinkChannel',
                'ordering': ('name',),
                'verbose_name_plural': 'UplinkChannels',
            },
        ),
        migrations.AddField(
            model_name='switch',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.SwitchModel'),
        ),
        migrations.AddField(
            model_name='switch',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='switch',
            name='pix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.PIX'),
        ),
        migrations.AddField(
            model_name='port',
            name='route',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Route'),
        ),
        migrations.AddField(
            model_name='port',
            name='switch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Switch'),
        ),
        migrations.AddField(
            model_name='port',
            name='switch_module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.SwitchModule'),
        ),
        migrations.AddField(
            model_name='monitorv4',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Tag'),
        ),
        migrations.AddField(
            model_name='mlpav6',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Tag'),
        ),
        migrations.AddField(
            model_name='mlpav4',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Tag'),
        ),
        migrations.AddField(
            model_name='ipv6address',
            name='ix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.IX'),
        ),
        migrations.AddField(
            model_name='ipv6address',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ipv4address',
            name='ix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.IX'),
        ),
        migrations.AddField(
            model_name='ipv4address',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltag',
            name='ix',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IX'),
        ),
        migrations.AddField(
            model_name='historicaltag',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltag',
            name='tag_domain',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.ChannelPort'),
        ),
        migrations.AddField(
            model_name='historicalswitchportrange',
            name='switch_model',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.SwitchModel'),
        ),
        migrations.AddField(
            model_name='historicalswitch',
            name='model',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.SwitchModel'),
        ),
        migrations.AddField(
            model_name='historicalswitch',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalswitch',
            name='pix',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.PIX'),
        ),
        migrations.AddField(
            model_name='historicalport',
            name='physical_interface',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.PhysicalInterface'),
        ),
        migrations.AddField(
            model_name='historicalport',
            name='route',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Route'),
        ),
        migrations.AddField(
            model_name='historicalport',
            name='switch',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Switch'),
        ),
        migrations.AddField(
            model_name='historicalport',
            name='switch_module',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.SwitchModule'),
        ),
        migrations.AddField(
            model_name='historicalpix',
            name='ix',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IX'),
        ),
        migrations.AddField(
            model_name='historicalpix',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalmonitorv4',
            name='monitor_address',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IPv4Address'),
        ),
        migrations.AddField(
            model_name='historicalmonitorv4',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Tag'),
        ),
        migrations.AddField(
            model_name='historicalmlpav6',
            name='mlpav6_address',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IPv6Address'),
        ),
        migrations.AddField(
            model_name='historicalmlpav6',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalmlpav6',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Tag'),
        ),
        migrations.AddField(
            model_name='historicalmlpav4',
            name='mlpav4_address',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IPv4Address'),
        ),
        migrations.AddField(
            model_name='historicalmlpav4',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalmlpav4',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Tag'),
        ),
        migrations.AddField(
            model_name='historicalipv6address',
            name='ix',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IX'),
        ),
        migrations.AddField(
            model_name='historicalipv6address',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalipv4address',
            name='ix',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IX'),
        ),
        migrations.AddField(
            model_name='historicalipv4address',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldioport',
            name='switch_port',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Port'),
        ),
        migrations.AddField(
            model_name='historicaldio',
            name='pix',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.PIX'),
        ),
        migrations.AddField(
            model_name='historicalcontactsmap',
            name='ix',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.IX'),
        ),
        migrations.AddField(
            model_name='historicalcontactsmap',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcontactsmap',
            name='noc_contact',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact'),
        ),
        migrations.AddField(
            model_name='historicalcontactsmap',
            name='org_contact',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact'),
        ),
        migrations.AddField(
            model_name='historicalcontactsmap',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Organization'),
        ),
        migrations.AddField(
            model_name='historicalcontactsmap',
            name='peer_contact',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact'),
        ),
        migrations.AddField(
            model_name='historicalbilateralpeer',
            name='tag',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Tag'),
        ),
        migrations.AddField(
            model_name='dioport',
            name='switch_port',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Port'),
        ),
        migrations.AddField(
            model_name='dio',
            name='pix',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.PIX'),
        ),
        migrations.AddField(
            model_name='contactsmap',
            name='ix',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.IX'),
        ),
        migrations.AddField(
            model_name='contactsmap',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactsmap',
            name='noc_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='noc_related', to='core.Contact'),
        ),
        migrations.AddField(
            model_name='contactsmap',
            name='org_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='org_related', to='core.Contact'),
        ),
        migrations.AddField(
            model_name='contactsmap',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Organization'),
        ),
        migrations.AddField(
            model_name='contactsmap',
            name='peer_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='peer_related', to='core.Contact'),
        ),
        migrations.AddField(
            model_name='bilateralpeer',
            name='customer_channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.CustomerChannel'),
        ),
        migrations.AddField(
            model_name='bilateralpeer',
            name='mac_addresses',
            field=models.ManyToManyField(to='core.MACAddress'),
        ),
        migrations.AddField(
            model_name='bilateralpeer',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bilateralpeer',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Tag'),
        ),
        migrations.AddField(
            model_name='bilateral',
            name='peer_a',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='peer_a_related', to='core.BilateralPeer'),
        ),
        migrations.AddField(
            model_name='bilateral',
            name='peer_b',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='peer_b_related', to='core.BilateralPeer'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('tag', 'ix', 'tag_domain')]),
        ),
        migrations.AlterUniqueTogether(
            name='port',
            unique_together=set([('switch', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='monitorv4',
            unique_together=set([('asn', 'tag', 'inner')]),
        ),
        migrations.AlterUniqueTogether(
            name='mlpav6',
            unique_together=set([('asn', 'tag', 'inner')]),
        ),
        migrations.AlterUniqueTogether(
            name='mlpav4',
            unique_together=set([('asn', 'tag', 'inner')]),
        ),
        migrations.AlterUniqueTogether(
            name='dioport',
            unique_together=set([('dio', 'ix_position', 'datacenter_position', 'switch_port')]),
        ),
        migrations.AlterUniqueTogether(
            name='dio',
            unique_together=set([('pix', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='contactsmap',
            unique_together=set([('organization', 'asn', 'ix')]),
        ),
        migrations.AlterUniqueTogether(
            name='bilateralpeer',
            unique_together=set([('asn', 'tag', 'inner')]),
        ),
    ]
